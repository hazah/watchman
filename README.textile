h2. Watchman

Rack based authorization middleware.

h2. Setup

h3. Rack

Watchman _must_ be downstream of some kind of authentication middleware. It _must_ have
a failure application declared, and you should declare which strategy to use by
default.

bc.. Rack::Builder.new do
  use Rack::Session::Cookie, :secret => "replace this with some secret key"

  ## Setup authentication

  use Warden::Manager do |warden|
    warden.default_strategies :password
    warden.failure_app = BadAuthenticationEndsUpHere
  end

  use Watchman::Manager do |watchman|
    # use the 'warden' strategy to get access to the permission collection
    warden.default_strategies :warden
    warden.failure_app = BadAuthorizationEndsUpHere
  end

  run SomeApp
end


h3. Authentication


h3. Session

One of the results of using any kind of permission objects is that you need to
tell Watchman how to serialize the permissions in and out of the session. You'll
need to set this up

bc.. Watchman::Manager.serialize_into_session do |permissions|
  permissions.map(&:id)
end

Watchman::Manager.serialize_from_session do |ids|
  Permission.get(ids)
end

p. This can of course be as complex as needed.
